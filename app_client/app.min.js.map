{"version":3,"sources":["app.min.js"],"names":["config","$routeProvider","$locationProvider","when","templateUrl","controller","controllerAs","otherwise","redirectTo","html5Mode","run","$rootScope","$location","authentication","$on","event","nextRoute","currentRoute","path","isLoggedIn","angular","module","homeCtrl","console","log","profileCtrl","meanData","vm","this","user","getProfile","success","data","error","e","$inject","resultCtrl","$scope","flightData","$http","$sce","result","get","destination","getDest","origin","getOri","travelType","getType","method","url","then","response","priceGas","regular","status","headers","errorMessage","directionsService","google","maps","DirectionsService","request","travelMode","TravelMode","DRIVING","route","dist","routes","legs","distance","value","trustSrc","src","trustAsResourceUrl","mapFrame","milesPerGallon","searchCtrl","$filter","SendData","farePrefrence","fromAirport","fromDate","passengers","toAirport","toDate","requestData","_buildRequestData","content-type","post","set","setOri","setDest","setType","errorCode","errorStatus","preferredCabin","_getPreferredCabin","depatureSlice","date","slices","push","returnSlice","slice","adultCount","solutions","refundable","cabinPrefrence","registerCtrl","credentials","name","email","password","location","mpg","onSubmit","register","err","alert","loginCtrl","login","$window","saveToken","token","localStorage","getToken","payload","split","atob","JSON","parse","exp","Date","now","currentUser","logout","removeItem","service","Authorization","savedTrip","desination","origins","dest","ori","type","navigationCtrl","navigation","restrict","directive"],"mappings":"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","file":"app.min.js","sourcesContent":["(function () {\n\n  angular.module('meanApp', ['ngRoute']);\n\n  function config ($routeProvider, $locationProvider) {\n    $routeProvider\n      .when('/', {\n        templateUrl: 'home/home.view.html',\n        controller: 'homeCtrl',\n        controllerAs: 'vm'\n      })\n      .when('/register', {\n        templateUrl: '/auth/register/register.view.html',\n        controller: 'registerCtrl',\n        controllerAs: 'vm'\n      })\n      .when('/login', {\n        templateUrl: '/auth/login/login.view.html',\n        controller: 'loginCtrl',\n        controllerAs: 'vm'\n      })\n      .when('/profile', {\n        templateUrl: '/profile/profile.view.html',\n        controller: 'profileCtrl',\n        controllerAs: 'vm'\n      })\n      .when('/search', {\n        templateUrl: '/search/search.view.html',\n        controller: 'searchCtrl'\n      })\n      .when('/result', {\n        templateUrl: '/result/result.view.html',\n        controller: 'resultCtrl'\n      })\n      .otherwise({redirectTo: '/'});\n\n    // use the HTML5 History API\n    $locationProvider.html5Mode(true);\n  }\n\n  function run($rootScope, $location, authentication) {\n    $rootScope.$on('$routeChangeStart', function(event, nextRoute, currentRoute) {\n      if ($location.path() === '/profile' && !authentication.isLoggedIn()) {\n        $location.path('/');\n      }\n    });\n  }\n  \n  angular\n    .module('meanApp')\n    .config(['$routeProvider', '$locationProvider', config])\n    .run(['$rootScope', '$location', 'authentication', run]);\n\n})();\n(function() {\n  \n  angular\n    .module('meanApp')\n    .controller('homeCtrl', homeCtrl);\n\n    function homeCtrl () {\n      console.log('Home controller is running');\n    }\n\n})();\n(function() {\n  \n  angular\n    .module('meanApp')\n    .controller('profileCtrl', profileCtrl);\n\n  profileCtrl.$inject = ['$location', 'meanData'];\n  function profileCtrl($location, meanData) {\n    var vm = this;\n\n    vm.user = {};\n\n    meanData.getProfile()\n      .success(function(data) {\n        vm.user = data;\n      })\n      .error(function (e) {\n        console.log(e);\n      });\n  }\n})();\n(function() {\n  \n  angular\n    .module('meanApp')\n    .controller('resultCtrl', resultCtrl);\n\n  resultCtrl.$inject = ['$scope', 'flightData', '$http', '$sce'];\n  function resultCtrl($scope, flightData, $http, $sce) {\n  \t$scope.result = flightData.get();\n  \t$scope.destination = flightData.getDest();\n  \t$scope.origin = flightData.getOri();\n  \t$scope.travelType = flightData.getType();\n\n    console.log('gas price search is running');\n\n    $http({\n      method: 'GET',\n      url: \"http://www.fueleconomy.gov/ws/rest/fuelprices\"\n    }).then(function success(response) {\n      $scope.priceGas = response.data.regular;\n    }, function error(data, status, headers, config) {\n      $scope.errorMessage = \"Something went wrong\";\n      console.log(\"price search not successful\")\n    });\n\n    console.log('distance search is running');\n    var directionsService = new google.maps.DirectionsService();\n    var request = {\n      origin: flightData.getOri() + \"airport\",\n      destination: flightData.getDest() + \"airport\",\n      travelMode: google.maps.TravelMode.DRIVING\n    };\n\n    directionsService.route(request, function(response, status) {\n        //$scope.resp = status + \" \" + request.origin + \" \" + request.destination;\n        if (status == \"OK\") {\n          $scope.dist = response.routes[0].legs[0].distance.value / 1609.34;\n        };\n    });\n\n    console.log('whats up');\n\n    $scope.trustSrc = function(src) {\n      return $sce.trustAsResourceUrl(src);\n    }\n\n    $scope.mapFrame = \"https://www.google.com/maps/embed/v1/directions?origin=airport\" + $scope.origin + \"&destination=airport\" + $scope.destination + \"&key=AIzaSyAN0om9mFmy1QN6Wf54tXAowK4eT0ZUPrU&mode=driving\";\n    //$scope.mapLink = \"https://maps.google.com?saddr=airport\" + $scope.origin + \"&daddr=airport\" + $scope.destination + \"&key=AIzaSyAN0om9mFmy1QN6Wf54tXAowK4eT0ZUPrU\";\n\n    $scope.milesPerGallon = 23.6;\n    //if ($scope.milesPerGallonEntry != null) {\n    //  $scope.milesPerGallon = parseInt($scope.milesPerGallonEntry*100, 10) / 100;\n    //}\n\n  }\n\n})();\n\n\n(function () {\n    \n    angular\n    .module('meanApp')\n    .controller('searchCtrl', searchCtrl);\n    \n    searchCtrl.$inject = ['$scope', '$http', 'flightData', '$location', '$filter']\n    function searchCtrl($scope, $http, flightData, $location, $filter) {\n\n        console.log('searchCtrl is running');\n\n        $scope.SendData = function() {\n\n        var url = \"https://www.googleapis.com/qpxExpress/v1/trips/search?key=AIzaSyCZUpSbCymTVkTvOzk8L8AMy9gV3ovMKGI\";\n        var data = {\n            farePrefrence: $scope.farePrefrence,\n            fromAirport: $scope.fromAirport,\n            fromDate: $filter('date')($scope.fromDate, 'yyyy-MM-dd'),\n            passengers: $scope.passengers,\n            toAirport: $scope.toAirport ,\n            toDate: $filter('date')($scope.toDate, 'yyyy-MM-dd'),\n            travelType: $scope.travelType\n        };\n\n        var requestData = _buildRequestData(data);\n        var config = {headers: {'content-type': 'application/json'}};\n\n        $http.post(url, requestData, config)\n        .success(function (data, status, headers, config) {\n            $location.path('/result');\n            flightData.set(data);\n            flightData.setOri($scope.fromAirport);\n            flightData.setDest($scope.toAirport);\n            flightData.setType($scope.travelType);\n\n        })\n        .error(function (data, status, headers, config) {\n            $scope.errorMessage = \"Something went wrong\";\n            $scope.errorCode = data;\n            $scope.errorStatus = status;\n        });\n\n        };\n\n    }\n\n\n})();\n\n\n\n_buildRequestData = function(request) {\n \tvar preferredCabin = _getPreferredCabin(request.farePrefrence);\n\n    var depatureSlice = {\n            origin: request.fromAirport,\n            destination: request.toAirport,\n            date: request.fromDate,\n            preferredCabin: preferredCabin\n        };\n\n    var slices = [];\n    slices.push(depatureSlice);\n\n    if(request.travelType == 'Round-trip') {\n        var returnSlice = {\n            origin: request.toAirport,\n            destination: request.fromAirport,\n            date: request.toDate,\n            preferredCabin: preferredCabin\n        };\n        slices.push(returnSlice);\n    }\n\n    searchCtrl.$inject = ['$location', 'meanData'];\n    function searchCtrl($location, meanData) {\n        console.log('searchCtrl is running');\n            var vm = this;\n            \n            vm.user = {};\n            \n            meanData.getProfile()\n      .success(function (data) {\n                vm.user = data;\n            })\n      .error(function (e) {\n                console.log(e);\n            });\n        \n    }\n    \n    var requestData = {\n      request: {\n        slice: slices,\n        passengers: {\n          adultCount: request.passengers\n        },\n        solutions: 5,\n        refundable: false\n      }\n    };\n\n    return requestData;\n };\n\n\n _getPreferredCabin = function(farePrefrence) {\n \tvar cabinPrefrence = '';\n\n \tswitch(farePrefrence) {\n\t    case 'Economy':\n\t        cabinPrefrence = 'COACH';\n\t        break;\n\t    case 'Business':\n\t        cabinPrefrence = 'BUSINESS';\n\t        break;\n\t    case 'First':\n\t        cabinPrefrence = 'FIRST';\n\t        break;\t        \n\t    default:\n\t        cabinPrefrence = 'COACH';\n \t}\n\n \treturn cabinPrefrence;\n };\n\n\n\n\n(function () {\n\n  angular\n    .module('meanApp')\n    .controller('registerCtrl', registerCtrl);\n\n  registerCtrl.$inject = ['$location', 'authentication'];\n  function registerCtrl($location, authentication) {\n    var vm = this;\n\n    vm.credentials = {\n      name : \"\",\n      email : \"\",\n      password : \"\",\n      location : \"\",\n      mpg : \"\",\n\n    };\n\n    vm.onSubmit = function () {\n      console.log('Submitting registration');\n      authentication\n        .register(vm.credentials)\n        .error(function(err){\n          alert(err);\n        })\n        .then(function(){\n          $location.path('profile');\n        });\n    };\n\n  }\n\n})();\n(function () {\n\n  angular\n  .module('meanApp')\n  .controller('loginCtrl', loginCtrl);\n\n  loginCtrl.$inject = ['$location', 'authentication'];\n  function loginCtrl($location, authentication) {\n    var vm = this;\n\n    vm.credentials = {\n      email : \"\",\n      password : \"\"\n    };\n\n    vm.onSubmit = function () {\n      authentication\n        .login(vm.credentials)\n        .error(function(err){\n          alert(err);\n        })\n        .then(function(){\n          $location.path('profile');\n        });\n    };\n\n  }\n\n})();\n(function () {\n\n  angular\n    .module('meanApp')\n    .service('authentication', authentication);\n\n  authentication.$inject = ['$http', '$window'];\n  function authentication ($http, $window) {\n\n    var saveToken = function (token) {\n      $window.localStorage['mean-token'] = token;\n    };\n\n    var getToken = function () {\n      return $window.localStorage['mean-token'];\n    };\n\n    var isLoggedIn = function() {\n      var token = getToken();\n      var payload;\n\n      if(token){\n        payload = token.split('.')[1];\n        payload = $window.atob(payload);\n        payload = JSON.parse(payload);\n\n        return payload.exp > Date.now() / 1000;\n      } else {\n        return false;\n      }\n    };\n\n    var currentUser = function() {\n      if(isLoggedIn()){\n        var token = getToken();\n        var payload = token.split('.')[1];\n        payload = $window.atob(payload);\n        payload = JSON.parse(payload);\n        return {\n          email : payload.email,\n          name : payload.name\n        };\n      }\n    };\n\n    register = function(user) {\n      return $http.post('/api/register', user).success(function(data){\n        saveToken(data.token);\n      });\n    };\n\n    login = function(user) {\n      return $http.post('/api/login', user).success(function(data) {\n        saveToken(data.token);\n      });\n    };\n\n    logout = function() {\n      $window.localStorage.removeItem('mean-token');\n    };\n\n    return {\n      currentUser : currentUser,\n      saveToken : saveToken,\n      getToken : getToken,\n      isLoggedIn : isLoggedIn,\n      register : register,\n      login : login,\n      logout : logout\n    };\n  }\n\n\n})();\n(function() {\n\n  angular\n    .module('meanApp')\n    .service('meanData', meanData);\n\n  meanData.$inject = ['$http', 'authentication'];\n  function meanData ($http, authentication) {\n\n    var getProfile = function () {\n      return $http.get('/api/profile', {\n        headers: {\n          Authorization: 'Bearer '+ authentication.getToken()\n        }\n      });\n    };\n\n    return {\n      getProfile : getProfile\n    };\n  }\n\n})();\n(function() {\n\n  angular\n    .module('meanApp')\n    .service('flightData', flightData);\n\n\n  function flightData() {\n\n    this.savedTrip = {};\n    this.desination = {};\n    this.origins = {};\n    this.travelType = {};\n\n    this.set = function(data) {\n        this.savedTrip = data;\n    };\n\n    this.get = function() {\n        return this.savedTrip;\n    }\n\n    this.setDest = function(dest) {\n        this.desination = dest;\n    };\n\n    this.getDest = function() {\n        return this.desination;\n    }\n\n    this.setOri = function(ori) {\n        this.origins = ori;\n    };\n\n    this.getOri = function() {\n        return this.origins;\n    }\n\n    this.setType = function(type) {\n        this.travelType = type;\n    };\n\n    this.getType = function() {\n        return this.travelType;\n    }\n\n\n  }\n\n})();\n\n\n\n\n(function () {\n\n  angular\n    .module('meanApp')\n    .controller('navigationCtrl', navigationCtrl);\n\n  navigationCtrl.$inject = ['$location','authentication'];\n  function navigationCtrl($location, authentication) {\n    var vm = this;\n\n    vm.isLoggedIn = authentication.isLoggedIn();\n\n    vm.currentUser = authentication.currentUser();\n\n  }\n\n})();\n(function () {\n\n  angular\n    .module('meanApp')\n    .directive('navigation', navigation);\n\n  function navigation () {\n    return {\n      restrict: 'EA',\n      templateUrl: '/common/directives/navigation/navigation.template.html',\n      controller: 'navigationCtrl as navvm'\n    };\n  }\n\n})();"]}